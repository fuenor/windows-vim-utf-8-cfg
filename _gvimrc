"========================================
"   Description : .gvimrc
"   Version     : 8.1
"========================================
scriptencoding utf-8
"----------------------------------------
" システム設定
"----------------------------------------
" エラー時の音を鳴らさない＆画面フラッシュの抑制
" set noerrorbells
set novisualbell
" set visualbell t_vb=

if has('multi_byte_ime') || has('xim')
  " 起動時にIM/IMEをオフ
  set iminsert=0 imsearch=0
  if has('xim') && has('GUI_GTK')
    " XIMの入力開始キー
    " set imactivatekey=C-space
    " Atok X3
    " let $GTK_IM_MODULE='xim'
    " uim-anthy
    " let $GTK_IM_MODULE='uim-anthy'
  endif
endif

" IMEの状態をカラー表示
if has('multi_byte_ime')
  highlight Cursor guifg=NONE guibg=Green
  highlight CursorIM guifg=NONE guibg=Purple
endif

"----------------------------------------
" 表示設定
"----------------------------------------
" ツールバーを非表示
" set guioptions-=T
" テキストベースのタブページを使用する
set guioptions-=e
" コマンドラインの高さ
" set cmdheight=1

" カラー設定:
" colorscheme mycolor
" set bg=light

" フォント設定
" 間違いやすい文字
" 80O1iIlL_\-８０Ｏ１IｌL
" カ力 エ工 ロ口 ー一― ニ二 へヘ
" 一二三四
" ~〜～
" 英数
" 0123456789|The quick brown fox jumps over the lazy dog.
" バックスラッシュ(または￥記号) \
"
" 日本語と英数字で異なるフォントを使用可能
" guifont     : ASCIIフォント
" guifontwide : 日本語フォント
" 文字が等間隔に見えるようにguifont(小数点使用可)の間隔を設定する
" ……………………
" ‥‥‥‥‥‥‥‥
" 英文FONT|日本語フォント___qgJj文字の基準位置

if has('win32') || has('win64')
  " set guifont=MS_Gothic:h11.5:cDEFAULT
  " set guifontwide=MS_Gothic:h11:cDEFAULT
  " set linespace=1
elseif has('xfontset')
  " set guifontset=a14,r14,k14
elseif has('unix')

elseif has('mac')
  " set guifont=Osaka-mono:h14
endif

" テキスト表示をDirectxを使用して行う
if has('directx')
  " set renderoptions=type:directx
endif

" 印刷用フォント
if has('printer')
  if has('win32') || has('win64')
    " set printfont=MS_Mincho:h12:cDEFAULT
    set printfont=MS_Gothic:h12:cDEFAULT
  endif
endif

""""""""""""""""""""""""""""""
" Window位置の保存と復帰
""""""""""""""""""""""""""""""
if has('unix')
  let s:infofile = '~/.vim/.vimpos'
else
  let s:infofile = '~/_vimpos'
endif

function! s:SaveWindowParam(filename)
  redir => pos
  silent! exe 'winpos'
  redir END
  let pos = matchstr(pos, 'X[-0-9 ]\+,\s*Y[-0-9 ]\+$')
  let file = fnamemodify(a:filename, ':p')
  let str = []
  let cmd = 'winpos '.substitute(pos, '[^-0-9 ]', '', 'g')
  cal add(str, cmd)
  let l = &lines
  let c = &columns
  cal add(str, 'set lines='. l.' columns='. c)
  silent! let ostr = readfile(file)
  if str != ostr
    call writefile(str, file)
  endif
endfunction

augroup SaveWindowParam
  au!
  exe 'autocmd SaveWindowParam VimLeave * call s:SaveWindowParam("'.s:infofile.'")'
augroup END

if filereadable(fnamemodify(s:infofile, ':p'))
  exe 'source '.s:infofile
endif
unlet s:infofile

"----------------------------------------
" メニューアイテム作製
"----------------------------------------
silent! aunmenu &File.&Save
silent! aunmenu &File.保存(&S)
silent! aunmenu &File.差分表示(&D)\.\.\.

let message_revert="再読込しますか?"
amenu <silent> 10.330 &File.再読込(&U)<Tab>:e!  :if confirm(message_revert, "&Yes\n&No")==1<Bar> e! <Bar> endif<CR>
amenu <silent> 10.340 &File.保存(&W)<Tab>:w  :if expand('%') == ''<Bar>browse confirm w<Bar>else<Bar>confirm w<Bar>endif<CR>
amenu <silent> 10.341 &File.更新時保存(&S)<Tab>:update  :if expand('%') == ''<Bar>browse confirm w<Bar>else<Bar>confirm update<Bar>endif<CR>
amenu <silent> 10.400 &File.現バッファ差分表示(&D)<Tab>:DiffOrig  :DiffOrig<CR>
amenu <silent> 10.401 &File.裏バッファと差分表示(&D)<Tab>:Diff\ #  :Diff #<CR>
amenu <silent> 10.402 &File.差分表示(&D)<Tab>:Diff  :browse vertical diffsplit<CR>
amenu <silent> 20.390 &Edit.ヒストリ貼り付け(&H)<Tab>"1P  "1P

